@model ReadersChronicle.Models.ChangePasswordViewModel

@{
    ViewData["Title"] = "Change Password";
}

<div class="container mt-5">
    <h2>Change Password</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    <form asp-action="ChangePassword" method="post">
        @Html.AntiForgeryToken()

        <div class="mb-3">
            <label for="OldPassword" class="form-label">Old Password</label>
            <input asp-for="OldPassword" class="form-control" type="password" placeholder="Enter old password" />
            <span asp-validation-for="OldPassword" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label for="NewPassword" class="form-label">New Password</label>
            <input asp-for="NewPassword" class="form-control" type="password" placeholder="Enter new password" />
            <span asp-validation-for="NewPassword" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label for="ConfirmPassword" class="form-label">Confirm Password</label>
            <input asp-for="ConfirmPassword" class="form-control" type="password" placeholder="Confirm new password" />
            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
        </div>

        <button type="submit" class="btn btn-primary">Change Password</button>
        <a href="@Url.Action("Profile", "Account")" class="btn btn-secondary">Cancel</a>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
