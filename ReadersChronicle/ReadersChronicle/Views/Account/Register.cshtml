@model ReadersChronicle.Models.RegisterViewModel

<div class="container" id="registration-container">
    <div id="register-container" class="w-100">
        <h2 class="fw-bold text-uppercase text-center mb-4">Register</h2>

        @if (ViewData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger pt-2 pb-0 text-center">
                <p>@ViewData["ErrorMessage"]</p>
            </div>
        }
        else if (ViewData["SuccessMessage"] != null)
        {
            <div class="alert alert-success pt-2 pb-0 text-center">
                <p>@ViewData["SuccessMessage"]</p>
            </div>
        }

        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { autocomplete = "off" }))
        {
            <div class="form-group py-3">
                @Html.LabelFor(m => m.UserName, new { @class = "pb-1 ps-2" })
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control rounded-pill w-100", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                <small>Username must be 4-15 characters long and can only contain letters, numbers, and underscores.</small>
            </div>

            <div class="form-group py-3">
                @Html.LabelFor(m => m.Email, new { @class = "pb-1 ps-2" })
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control rounded-pill w-100" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                <small>Email must belong to Gmail, Yahoo, or Outlook domains.</small>
            </div>

            <div class="form-group py-3">
                @Html.LabelFor(m => m.Password, new { @class = "pb-1 ps-2" })
                @Html.PasswordFor(m => m.Password, new { @class = "form-control rounded-pill w-100", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                <small>Password must be at least 8 characters and contain an uppercase letter, a lowercase letter, a digit, and a special character.</small>
            </div>

            <div class="form-group py-3">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "pb-1 ps-2" })
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control rounded-pill w-100" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>

            <div class="form-group py-3">
                @Html.LabelFor(m => m.SecurityQuestion, new { @class = "pb-1 ps-2" })
                @Html.DropDownListFor(m => m.SecurityQuestion, new SelectList(new[]
                         {
            new { Value = "MotherMaidenName", Text = "What is your mother's maiden name?" },
            new { Value = "FirstPet", Text = "What was the name of your first pet?" },
            new { Value = "FavoriteTeacher", Text = "What is the name of your favorite teacher?" }
            }, "Value", "Text"), "Select a question", new { @class = "form-control rounded-pill w-100" })
                @Html.ValidationMessageFor(m => m.SecurityQuestion, "", new { @class = "text-danger" })
            </div>

            <div class="form-group py-3">
                @Html.LabelFor(m => m.SecurityAnswer, new { @class = "pb-1 ps-2" })
                @Html.PasswordFor(m => m.SecurityAnswer, new { @class = "form-control rounded-pill w-100" })
                @Html.ValidationMessageFor(m => m.SecurityAnswer, "", new { @class = "text-danger" })
            </div>

            <button type="submit" class="btn btn-primary rounded-pill w-100 mt-2">Register</button>
        }
    </div>
</div>



<style scoped>
    #registration-container{
        padding-bottom: 30px;
        margin-top: 20px;
        padding-top:10%;
    }

    #register-container {
        background: linear-gradient(rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #ffffff;
        padding: 3rem;
        border-radius: 12px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        max-width: 500px;
        margin: 0 auto;
    }

    #register-container h2 {
        font-size: 1.8rem;
        color: #333333;
    }

    .form-label {
        font-weight: 500;
        color: #555555;
        margin-bottom: 0.5rem;
    }

    .form-control {
        font-size: 1rem;
        padding: 0.75rem 1.25rem;
        border: 1px solid #ddd;
        box-shadow: inset 0px 2px 4px rgba(0, 0, 0, 0.05);
    }

    .form-control:focus {
        border-color: #8d6b88;
        box-shadow: 0px 0px 5px rgba(141, 107, 136, 0.5);
    }

    .btn-primary {
        background-color: #8d6b88;
        border: none;
        font-size: 1.1rem;
        padding: 0.75rem 1.5rem;
    }

    .btn-primary:hover {
        background-color: #013a55;
    }

    .btn-outline-primary {
        color: #013a55;
        border: 2px solid #013a55;
        font-size: 1.1rem;
        padding: 0.75rem 1.5rem;
    }

    .btn-outline-primary:hover {
        background-color: #013a55;
        color: #ffffff;
    }

    a.text-dark:hover {
        text-decoration: underline;
        color: #8d6b88;
    }

    a:hover {
        font-weight: bold;
    }

    .alert {
        margin-top: 10px;
    }

    #create-account {
        padding-top: 10px;
    }

    #create-account h5 {
        color: #ffffff;
        font-weight: 500;
    }

    #create-account-button {
        font-size: 1.1rem;
        padding: 0.75rem 1.5rem;
        border: 2px solid #8d6b88;
    }

    #create-account-button:hover {
        background-color: #8d6b88;
        color: #ffffff;
    }

    @@media (max-width: 768px) {
        #register-container {
            padding: 2rem;
            margin-top: 65px;
            height: auto;
        }

        .form-control {
            font-size: 0.9rem;
            padding: 0.5rem 1rem;
        }

        .btn {
            font-size: 1rem;
            padding: 0.5rem 1rem;
        }

        #registration-container {
            padding-top: 4%;
        }
    }
</style>
