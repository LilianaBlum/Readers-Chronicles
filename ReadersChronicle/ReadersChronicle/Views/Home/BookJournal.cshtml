@using ReadersChronicle.Models
@model List<BookJournalViewModel>

<h2 class="mb-5">Book Journal</h2>

<div class="row">
    @foreach (var journal in Model)
    {
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@journal.Title</h5>
                    <p class="card-text"><strong>Start Date:</strong> @journal.StartDate?.ToString("d")</p>
                    <p class="card-text"><strong>End Date:</strong> @journal.EndDate?.ToString("d")</p>

                    @if (!string.IsNullOrEmpty(journal.CoverImageBase64))
                    {
                        <img src="data:image/jpeg;base64,@journal.CoverImageBase64" alt="@journal.Title" class="img-thumbnail" />
                    }
                    else
                    {
                        <p>No image available</p>
                    }

                    @if (!string.IsNullOrEmpty(journal.OverallImpression))
                    {
                        <p class="card-text"><strong>Impression:</strong> @journal.OverallImpression</p>
                    }

                    @if (!string.IsNullOrEmpty(journal.Insights))
                    {
                        <p class="card-text"><strong>Insights:</strong> @journal.Insights</p>
                    }

                    <!-- Edit Entry Button -->
                    <button class="btn btn-primary" id="open-edit-modal" data-id="@journal.JournalID" data-bs-toggle="modal" data-bs-target="#editJournalModal">
                        Edit Entry
                    </button>
                </div>
            </div>
        </div>
    }
</div>

<!-- Modal for Editing Journal Entry -->
<div class="modal fade mt-5" id="editJournalModal" tabindex="-1" role="dialog" aria-labelledby="editJournalModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editJournalModalLabel">Edit Journal Entry</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Form to edit journal -->
                <form id="editJournalForm">
                    <input type="hidden" name="JournalID" id="JournalID" />
                    <input type="hidden" name="UserBookID" id="UserBookID" />

                    <!-- Fields for editing -->
                    <div class="mb-3">
                        <label for="StartDate" class="form-label">Start Date</label>
                        <input type="date" class="form-control" id="StartDate" name="StartDate" />
                    </div>

                    <div class="mb-3">
                        <label for="EndDate" class="form-label">End Date</label>
                        <input type="date" class="form-control" id="EndDate" name="EndDate" />
                    </div>

                    <div class="mb-3">
                        <label for="OverallRating" class="form-label">Rating</label>
                        <input type="number" class="form-control" id="OverallRating" name="OverallRating" min="1" max="5" />
                    </div>

                    <div class="mb-3">
                        <label for="OverallImpression" class="form-label">Impression</label>
                        <textarea class="form-control" id="OverallImpression" name="OverallImpression"></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="Insights" class="form-label">Insights</label>
                        <textarea class="form-control" id="Insights" name="Insights"></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="AuthorsAim" class="form-label">Author's Aim</label>
                        <textarea class="form-control" id="AuthorsAim" name="AuthorsAim"></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="Recommendation" class="form-label">Recommendation</label>
                        <textarea class="form-control" id="Recommendation" name="Recommendation"></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="AdditionalNotes" class="form-label">Additional Notes</label>
                        <textarea class="form-control" id="AdditionalNotes" name="AdditionalNotes"></textarea>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" id="save-edited-data" class="btn btn-primary">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script scoped>
    $(document).ready(function () {
        // Trigger the modal when the 'Edit Entry' button is clicked
        $('#open-edit-modal').click(function () {
            var journalId = $(this).data('id');  // Get journal ID

            // Use AJAX to get the journal data and populate the form
            $.ajax({
                url: '@Url.Action("EditJournal", "Home")',  // Action that fetches journal data
                data: { id: journalId },  // Send journal ID to the server
                success: function (data) {
                    console.log('Received Data:', data);
                    // Check if data exists
                    if (data) {

                        // Populate form fields with the data received (match the casing)
                        $('#JournalID').val(data.journalID);
                        $('#UserBookID').val(data.userBookID);
                        $('#OverallRating').val(data.overallRating);
                        $('#OverallImpression').val(data.overallImpression);
                        $('#Insights').val(data.insights);
                        $('#AuthorsAim').val(data.authorsAim);
                        $('#Recommendation').val(data.recommendation);
                        $('#AdditionalNotes').val(data.additionalNotes);

                        // Format StartDate and EndDate to 'YYYY-MM-DD' for <input type="date">
                        if (data.startDate) {
                            $('#StartDate').val(formatDateForInput(data.startDate));
                        }

                        if (data.endDate) {
                            $('#EndDate').val(formatDateForInput(data.endDate));
                        }

                        console.log('StartDate:', $('#StartDate').val());
                        console.log('EndDate:', $('#EndDate').val());

                        // Open the modal
                        $('#editJournalModal').modal('show');
                    } else {
                        alert('No data found for the selected journal.');
                    }
                },
                error: function () {
                    alert('Error fetching journal data.');
                }
            });
        });

        // Function to format date as 'YYYY-MM-DD' for input[type="date"]
        function formatDateForInput(date) {
            var d = new Date(date);
            var day = ("0" + d.getDate()).slice(-2);  // Add leading zero if needed
            var month = ("0" + (d.getMonth() + 1)).slice(-2);  // Add leading zero if needed
            var year = d.getFullYear();

            return year + "-" + month + "-" + day;
        }

        // Handle the form submission
        $('#editJournalForm').submit(function (event) {
            event.preventDefault();

            // Get the form data
            var formData = $(this).serialize();

            // Send the AJAX request to save the edited data
            $.ajax({
                type: 'POST',
                url: '@Url.Action("SaveEditedJournal", "Home")',  // Action to save the edited data
                data: formData,
                success: function (response) {
                    console.log('Response:', response); // Log the response to debug it
                    if (response.success) {
                        $('#editJournalModal').modal('hide'); // Close modal if successful
                        updateJournalList(response.updatedJournalEntries); // Update journal list
                    } else {
                        alert('Error: ' + response.message || 'Unknown error');
                    }
                },
                error: function (xhr, status, error) {
                    console.log('AJAX Error - Status:', status); // Log the status code
                    console.log('AJAX Error - Error:', error);   // Log the error description
                    console.log('AJAX Error - Response Text:', xhr.responseText); // Log the response text for more details
                    alert('An error occurred while saving the journal.');
                }
            });
        });

        // Function to update the journal list after saving
        function updateJournalList(journals) {
            var journalListContainer = $('.row'); // The container where journals are listed

            // Clear existing journals in the list
            journalListContainer.empty();

            // Iterate over the updated journals and create the new HTML
            journals.forEach(function (journal) {
                var journalHTML = `
                    <div class="col-md-6 mb-4">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">${journal.title}</h5>
                                <p class="card-text"><strong>Start Date:</strong> ${new Date(journal.startDate).toLocaleDateString()}</p>
                                <p class="card-text"><strong>End Date:</strong> ${new Date(journal.endDate).toLocaleDateString()}</p>
                                ${journal.coverImageBase64 ? '<img src="data:image/jpeg;base64,' + journal.coverImageBase64 + '" alt="' + journal.title + '" class="img-thumbnail" />' : '<p>No image available</p>'}
                                ${journal.overallImpression ? '<p class="card-text"><strong>Impression:</strong> ' + journal.overallImpression + '</p>' : ''}
                                ${journal.insights ? '<p class="card-text"><strong>Insights:</strong> ' + journal.insights + '</p>' : ''}
                                <button class="btn btn-primary" data-id="${journal.journalID}" data-bs-toggle="modal" data-bs-target="#editJournalModal">Edit Entry</button>
                            </div>
                        </div>
                    </div>
                `;

                // Append the new HTML for the journal
                journalListContainer.append(journalHTML);
            });
        }
    });
</script>
