@using ReadersChronicle.Models
@model List<UserBookViewModel>

<div class="container" id="user-library-container">

    <h2 class="text-center">Your Library</h2>
    <ul class="nav nav-tabs mb-4 justify-content-center">
        <li class="nav-item">
            <a class="nav-link @(ViewData["SelectedStatus"]?.ToString() == "CurrentlyReading" ? "active" : "")"
               href="@Url.Action("UserLibrary", "Home", new { status = "CurrentlyReading" })">Currently Reading</a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(ViewData["SelectedStatus"]?.ToString() == "WantToRead" ? "active" : "")"
               href="@Url.Action("UserLibrary", "Home", new { status = "WantToRead" })">Want to Read</a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(ViewData["SelectedStatus"]?.ToString() == "Finished" ? "active" : "")"
               href="@Url.Action("UserLibrary", "Home", new { status = "Finished" })">Finished</a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(ViewData["SelectedStatus"]?.ToString() == "Dnf" ? "active" : "")"
               href="@Url.Action("UserLibrary", "Home", new { status = "Dnf" })">DNF (Did Not Finish)</a>
        </li>
    </ul>

    @if (!string.IsNullOrEmpty(TempData["Message"] as string))
    {
        <div class="alert alert-info text-center">
            @TempData["Message"]
        </div>
    }

    <div class="row" id="user-library-books">
        @foreach (var book in Model)
        {
            <div class="col-lg-3 col-md-4 col-sm-6 mb-4 d-flex align-items-stretch">
                <div class="card shadow-sm h-100">
                    <button type="button" class="btn-close position-absolute top-0 end-0 m-2" data-bs-toggle="modal" data-bs-target="#removeModal-@book.UserBookID" aria-label="Remove"></button>
                    <div class="card-img-container">
                        <img src="data:image/jpeg;base64,@book.CoverImageBase64" alt="Book Cover" class="card-img-top" />
                    </div>
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@book.Title</h5>
                        <p class="card-text text-muted">Author: @book.Author</p>
                        <p class="card-text">Pages: @book.Length</p>
                        <p class="card-text"><strong>Status:</strong> @book.Status</p>

                        <button type="button" class="btn btn-primary mt-auto" data-bs-toggle="modal" data-bs-target="#statusModal-@book.UserBookID">
                            Change Status
                        </button>

                        @if (book.Status == "CurrentlyReading")
                        {
                            <button type="button" class="btn btn-secondary mt-2" data-bs-toggle="modal" data-bs-target="#progressModal-@book.UserBookID">
                                Update Progress
                            </button>
                        }

                        @if (book.Status == "Finished" || book.Status == "Dnf")
                        {
                            <form method="post" action="@Url.Action("AddToJournal", "Home")" class="mt-2" onsubmit="submitForm(event, this)">
                                <input type="hidden" name="userBookId" value="@book.UserBookID" />
                                <button type="submit" class="btn btn-success w-100">Add to Journal</button>
                            </form>
                        }
                    </div>
                </div>
            </div>

            <!-- Modals for Changing Status and Progress -->
            <!-- Change Status Modal -->
            <div class="modal fade" id="statusModal-@book.UserBookID" tabindex="-1" aria-labelledby="statusModalLabel-@book.UserBookID" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="statusModalLabel-@book.UserBookID">Change Book Status</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <form method="post" action="@Url.Action("ChangeStatus", "Home")">
                            <div class="modal-body">
                                <input type="hidden" name="userBookId" value="@book.UserBookID" />
                                <label for="newStatus" class="form-label">Select New Status</label>
                                <select name="newStatus" class="form-select" id="newStatus">
                                    <option value="CurrentlyReading">Currently Reading</option>
                                    <option value="WantToRead">Want to Read</option>
                                    <option value="Finished">Finished</option>
                                    <option value="Dnf">DNF (Did Not Finish)</option>
                                </select>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-primary">Save Changes</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Progress Modal -->
            <div class="modal fade" id="progressModal-@book.UserBookID" tabindex="-1" aria-labelledby="progressModalLabel-@book.UserBookID" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="progressModalLabel-@book.UserBookID">Update Progress</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <form method="post" action="@Url.Action("UpdateProgress", "Home")" id="updateProgressForm-@book.UserBookID">
                            <div class="modal-body">
                                <input type="hidden" name="userBookId" value="@book.UserBookID" />
                                <label for="currentPage" class="form-label">Current Page</label>
                                <input type="number" class="form-control" name="currentPage" id="currentPage-@book.UserBookID"
                                       value="@book.CurrentPage" min="0" max="@book.Length" />
                                <small class="text-muted">Book Length: @book.Length pages</small>
                                <div class="d-flex mt-3">
                                    <button type="button" class="btn btn-secondary me-2 dnf-button" data-userbookid="@book.UserBookID">
                                        DNF
                                    </button>
                                    <button type="button" class="btn btn-primary finished-button" data-userbookid="@book.UserBookID">
                                        Finished
                                    </button>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-primary">Save Progress</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Remove Book Modal -->
            <div class="modal fade" id="removeModal-@book.UserBookID" tabindex="-1" aria-labelledby="removeModalModalLabel-@book.UserBookID" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="removeModalsModalLabel-@book.UserBookID">Are you sure you want to remove this book from your library?</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <form method="post" action="@Url.Action("RemoveBook", "Home")" id="RemoveBookForm-@book.UserBookID">
                            <div class="modal-body">
                                <input type="hidden" name="userBookId" value="@book.UserBookID" />
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-primary">Remove</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    function validatePageInput(bookId, bookLength) {
        const currentPageInput = document.getElementById(`currentPage-${bookId}`);
        const saveProgressBtn = document.getElementById(`saveProgressBtn-${bookId}`);
        const didYouFinish = document.getElementById(`didYouFinish-${bookId}`);

        const currentPage = parseInt(currentPageInput.value, 10);

        // Disable the "Save Progress" button if the input is invalid
        if (currentPage > bookLength || currentPage < 0) {
            saveProgressBtn.disabled = true;
        } else {
            saveProgressBtn.disabled = false;
        }

        // Show the "Did you finish?" prompt if the current page equals the book length
        if (currentPage === bookLength) {
            didYouFinish.classList.remove("d-none");
        } else {
            didYouFinish.classList.add("d-none");
        }
    }

    document.addEventListener("DOMContentLoaded", () => {
        // DNF button functionality
        document.querySelectorAll(".dnf-button").forEach(button => {
            button.addEventListener("click", () => {
                const userBookId = button.dataset.userbookid;
                const form = document.querySelector(`#updateProgressForm-${userBookId}`);
                form.action = '@Url.Action("MarkAsDNF", "Home")';
                form.method = 'POST';
                form.submit();
            });
        });

        // Finished button functionality
        document.querySelectorAll(".finished-button").forEach(button => {
            button.addEventListener("click", () => {
                const userBookId = button.dataset.userbookid;
                const form = document.querySelector(`#updateProgressForm-${userBookId}`);
                form.action = '@Url.Action("FinishBook", "Home")';
                form.method = 'POST';
                form.submit();
            });
        });
    });

    function submitForm(event, form) {
        event.preventDefault();

        var userBookId = form.querySelector('input[name="userBookId"]').value;

        // Send the AJAX request to the server
        $.ajax({
            type: 'POST',
            url: '@Url.Action("AddToJournal", "Home")',
            data: { userBookId: userBookId },
            success: function (response) {
                // Display the message in the message container
                var messageContainer = $('#message-container');
                var alertMessage = $('#alert-message');

                if (response.success) {
                    // Success message
                    alert(response.message);
                } else {
                    // Error message
                    alert(response.message);
                }

                // Show the message container
                messageContainer.show();
            },
            error: function () {
                var messageContainer = $('#message-container');
                var alertMessage = $('#alert-message');

                // Error handling if AJAX request fails
                alertMessage.text('An error occurred while adding the book to the journal.');
                messageContainer.removeClass('alert-success').addClass('alert-danger');
                messageContainer.show();
            }
        });
    }
</script>

<style scoped>
    .btn-close {
        z-index: 10;
        background-color:white;
    }

    #user-library-books{
        display: flex;
        flex-wrap: wrap;
        padding:10px;
    }

    #user-library-container{
        margin-top: 50px;
        margin-bottom: 50px;
        padding-top:2%;
        background-color: #ffffff; /* White background */
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1); /* Subtle shadow */
    }

    .nav-link{
        text-decoration: underline !important;
        color:black;
    }

    h2 {
        font-size: 2.5rem;
        font-weight: bold;
        color: #333;
    }

    .nav-tabs .nav-link.active {
        background-color: #6d486b;
        color: #fff;
    }

    .card {
        border: none;
        transition: transform 0.3s ease;
        height: 100%;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        overflow: hidden;
        display: flex;
        flex-direction: column;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

    .card-img-container {
        height: 400px;
        overflow: hidden;
    }

    .card-img-top {
        object-fit: cover;
        width: 100%;
        height: 100%;
    }

    .col-md-3 {
        max-width: 100%;
    }

    .card {
        width: 100%;
    }

    .btn {
        border-radius: 0.3rem;
    }

    .btn-primary {
        background-color: #6d486b;
        border: none;
    }

        .btn-primary:hover {
            background-color: #5a3b5a;
        }

    .btn-secondary {
        background-color: #8d6b88;
    }

    .btn-success {
        background-color: #2a9d8f;
    }

    .modal-dialog{
        margin-top:20%;
    }

    .modal-header {
        background-color: #6d486b;
        color: white;
    }

    .modal-footer .btn {
        border-radius: 0.3rem;
    }
</style>
