@model ReadersChronicle.Models.ArticleDetailsViewModel
@using System.Security.Claims

<div class="container" id="article-details-container">
    <div class="bg-white p-4 rounded shadow">
        <div class="row ms-1" id="back-button">
            <a asp-action="Index" class="btn btn-secondary" style="width:80px;">Back</a>
        </div>
        <div class="row">
            <div class="col-md-4">
                <img class="img-fluid" src="data:@Model.PictureMimeType;base64,@Convert.ToBase64String(Model.Picture)" alt="Article Image" />
            </div>
            <div class="col-md-4">
                <h1 class="mt-3">@Model.Title</h1>
                <small class="text-muted">By @Model.UserName on @Model.TimeCreated.ToShortDateString()</small>
                <p class="mt-4">@Model.Description</p>
            </div>
            <div class="col-md-4" id="like-comment-section">
                <form asp-action="Like" asp-route-id="@Model.Id" method="post" class="d-inline">
                    <button type="submit" class="btn article-like-button" style="background-color: @(Model.UserLiked ? "#ff5e5e" : "#ccc"); color: white;">
                        @(Model.UserLiked ? "Unlike" : "Like")
                    </button>
                </form>
                <span class="ms-2">Likes: @Model.TotalLikes</span>

                <hr />

                <h3>Comments</h3>
                <div id="comment-section" class="comments-container">
                    <form asp-action="AddComment" method="post">
                        <input type="hidden" name="articleId" value="@Model.Article.Id" />
                        <div class="comment-section">
                            <div class="comment-input">
                                <textarea name="description" placeholder="Add a comment..." required></textarea>
                            </div>
                            <button type="submit" class="btn btn-secondary post-comment-btn">Post</button>
                        </div>
                    </form>
                    <div class="comment-list">
                        @foreach (var comment in Model.Comments)
                        {
                            <div class="comment ps-0 pe-0">
                                <div class="row">
                                    <div class="col-md-8 d-flex">
                                        <p style="word-break: break-all;"><strong>@comment.User.UserName:</strong> @comment.Description</p>
                                    </div>
                                    <div class="col-md-3 d-flex align-items-center justify-content-between flex-row">
                                        <div>
                                            <form asp-action="LikeComment" method="post" asp-route-commentId="@comment.CommentId">
                                                <button type="submit" class="like-btn @((Model.UserLikedComments.Any(cr => cr.CommentId == comment.CommentId)) ? "liked" : "")">
                                                    <i class="fas fa-heart"></i>
                                                </button>
                                            </form>
                                            <span class="like-count">
                                                Likes: @Model.UserLikedComments.Count(cr => cr.CommentId == comment.CommentId)
                                            </span>
                                        </div>
                                        @if (comment.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier))
                                        {
                                            <button class="btn btn-options" data-bs-toggle="dropdown" aria-expanded="false">
                                                <i class="fa fa-ellipsis-v"></i>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li><a class="dropdown-item" href="@Url.Action("Edit", "Comment", new { commentId = comment.CommentId })">Edit</a></li>
                                                <li>
                                                    <form asp-action="Delete" asp-controller="Comment" method="post" asp-route-commentId="@comment.CommentId">
                                                        <button type="submit" class="dropdown-item text-danger">Delete</button>
                                                    </form>
                                                </li>
                                            </ul>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />

<script scoped>
    function formatLikeCount(count) {
        if (count >= 1000) {
            return (count / 1000).toFixed(1) + 'k';
        }
        return count;
    }

    document.querySelectorAll('.like-count').forEach(function (element) {
        var count = parseInt(element.textContent.replace('Likes: ', '').trim());
        element.textContent = 'Likes: ' + formatLikeCount(count);
    });
</script>

<style scoped>
    #back-button{
        margin-bottom:20px;
    }

    #article-details-container{
        margin-top:8%;
    }

    .bg-white {
        background-color: #ffffff;
        padding-left:20px;
    }

    img{
        width:100%;
        height:100%;
    }

    .btn-secondary {
        background-color: #6d486b;
        border: none;
        font-size: 0.9rem;
        padding: 6px 12px;
    }

        .btn-secondary:hover {
        background-color: #8d6b88;
    }

    .comment-section {
        display: flex;
        margin-top:20px;
        align-items: center;
        border-top: 1px solid #ccc;
        padding: 10px 0;
        width: 100%;
    }

    .comment-input {
        flex-grow: 1;
    }

        .comment-input textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            resize: none;
            font-size: 14px;
            background-color: #f9f9f9;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
        }

            .comment-input textarea:focus {
                outline: none;
                border-color: #007bff;
            }

    .post-comment-btn {
        background-color: #6d486b;
        color: white;
        border: none;
        border-radius: 5px;
        padding: 6px 16px;
        cursor: pointer;
        font-size: 14px;
        margin-left: 10px;
        transition: background-color 0.2s;
    }

    .comments-container {
        max-height: 550px; /* Limit height */
        overflow-y: auto; /* Allow vertical scroll */
        overflow-x: hidden; /* Prevent horizontal scroll */
        padding-right: 10px;
    }

    .comment-list {
        margin-top: 20px;
    }

    .comment {
        margin-bottom: 15px;
        border-bottom: 1px solid #ddd;
    }

    .comment .row {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
    }

    .comment .col-md-8 {
        flex-grow: 1;
    }

    .comment .col-md-4 {
        flex-shrink: 0;
        display: flex;
        justify-content: flex-end;
        align-items: center;
    }

    .like-btn {
        background: none;
        border: none;
        color: #ccc;
        font-size: 20px;
        cursor: pointer;
        transition: color 0.3s ease;
    }

    .like-btn:hover {
            color: #e04d83;
    }

    .like-btn.liked {
        color: #ff5e5e;
    }

    .like-count {
        text-align:center;
        font-size: 14px;
        color: #555;
    }

    #comments-section > div > div > div.col-md-3 > div > form{
        text-align: center;
    }

    .article-like-button:hover{
        background-color: #e04d83 !important;
        font-weight: bold;
    }

    .comment-options {
        position: relative;
        display: inline-block;
    }

        .comment-options .btn-options {
            background: transparent;
            border: none;
            color: #333;
            font-size: 18px;
            padding: 0;
            cursor: pointer;
        }

        .comment-options .dropdown-menu {
            position: absolute;
            right: 0;
            min-width: 120px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
            padding: 5px 0;
        }

        .comment-options .dropdown-item {
            padding: 8px 12px;
            font-size: 14px;
        }

            .comment-options .dropdown-item:hover {
                background-color: #f0f0f0;
            }

            .comment-options .dropdown-item.text-danger {
                color: red;
            }

                .comment-options .dropdown-item.text-danger:hover {
                    background-color: #ffdddd;
                }


    #comments-section > div > div > div.col-md-2 > div{
        text-align:center !important;
    }

    @@media (max-width: 768px) {
        #article-details-container {
            margin-top: 18%;
        }

        .like-count {
        display: block; /* Ensure like count doesn't break alignment */
        text-align: center;
        margin-top: 5px;
    }

        .col-md-3 {
            gap: 10px; /* Add spacing between buttons */
        }

        .btn-options {
            margin-left: 10px; /* Add spacing if needed */
        }

        #like-comment-section{
            margin-top:30px;
        }

        #back-button {
            margin-bottom: 10px;
        }
    }
</style>
